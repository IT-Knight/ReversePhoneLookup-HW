// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReversePhoneLookup.Api;

namespace ReversePhoneLookup.Web.Migrations
{
    [DbContext(typeof(PhoneLookupContext))]
    partial class PhoneLookupContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("contact_id_seq");

            modelBuilder.HasSequence("operator_id_seq");

            modelBuilder.HasSequence("phone_id_seq");

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("phone_id");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("contact");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mcc")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("mcc");

                    b.Property<string>("Mnc")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("mnc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("operator");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int")
                        .HasColumnName("operator_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("phone");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Contact", b =>
                {
                    b.HasOne("ReversePhoneLookup.Api.Models.Entities.Phone", "Phone")
                        .WithMany("Contacts")
                        .HasForeignKey("PhoneId")
                        .HasConstraintName("contact_phone_id_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Phone", b =>
                {
                    b.HasOne("ReversePhoneLookup.Api.Models.Entities.Operator", "Operator")
                        .WithMany("Phones")
                        .HasForeignKey("OperatorId")
                        .HasConstraintName("phone_operator_id_fkey")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Operator", b =>
                {
                    b.Navigation("Phones");
                });

            modelBuilder.Entity("ReversePhoneLookup.Api.Models.Entities.Phone", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
